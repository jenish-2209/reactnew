{"version":3,"sources":["components/Header.js","components/Posts.js","components/PostDetail.js","components/CategoryDetail.js","components/SearchResults.js","components/Footer.js","components/AuthorDetail.js","App.js","reportWebVitals.js","index.js"],"names":["Header","logoUrl","setLogoUrl","useState","logoAlt","setLogoAlt","logoWidth","setLogoWidth","logoHeight","setLogoHeight","categories","setCategories","searchTerm","setSearchTerm","navigate","useNavigate","location","useLocation","useEffect","async","logoField","axios","get","data","mobile_logo","url","alt","width","height","error","console","fetchLogo","filteredCategories","filter","category","id","fetchCategories","isHomePage","pathname","React","createElement","Fragment","className","Navbar","expand","Container","Brand","href","title","src","loading","Toggle","aria-controls","Collapse","Nav","Form","onSubmit","e","preventDefault","Control","type","placeholder","aria-label","value","onChange","target","Button","variant","FontAwesomeIcon","icon","faSearch","Link","to","map","key","slug","name","Posts","posts","setPosts","stickyPosts","setStickyPosts","setLoading","currentPage","setCurrentPage","totalPages","setTotalPages","response","Cookies","set","JSON","stringify","expires","path","totalPosts","headers","Math","ceil","fetchPosts","fetchStickyPosts","getAuthorLink","post","author","_embedded","authorImage","avatar_urls","style","borderRadius","marginRight","handlePageClick","pageNumber","length","Date","date","toLocaleDateString","year","month","day","dangerouslySetInnerHTML","__html","rendered","excerpt","renderPagination","paginationItems","push","onClick","range","page","max","min","PostDetail","useParams","setPost","setAuthor","sidebarHtml","setSidebarHtml","comments","setComments","loadingComments","setLoadingComments","headings","setHeadings","comment","setComment","authorName","setAuthorName","authorEmail","setAuthorEmail","commentError","setCommentError","commentSuccess","setCommentSuccess","tocVisible","setTocVisible","contentRef","useRef","getTime","then","_postData$_embedded","_postData$_embedded$a","postData","log","authorData","catch","status","sortedComments","sort","a","b","fetchComments","selected_sidebar","contentElement","current","extractedHeadings","Array","from","querySelectorAll","heading","innerText","replace","toLowerCase","text","level","parseInt","tagName","renderComments","commentList","parentId","arguments","undefined","parent","author_name","charAt","dateString","formatDate","content","wordCount","split","word","calculateReadingTime","ref","newComment","author_email","htmlFor","required","toggleToc","faChevronUp","faChevronDown","element","document","getElementById","window","scrollTo","top","offsetTop","behavior","scrollToHeading","description","slice","join","CategoryDetail","setCategory","categoryData","fetchCategory","fetchPostsByCategory","queryParams","URLSearchParams","search","cat","categorySlug","handleCategoryClick","SearchResults","query","fetchSearchResults","Footer","footerData","setFooterData","footer_logo","address_india","address_usa","phone","social_ratings","net_zero_website","social_icons","copyright","footer_links","quickLinks","setQuickLinks","serviceMenu","setServiceMenu","fetchFooterData","quick_links","service_menu","fetchFooterMenus","renderMenuItems","menuItems","item","rating","index","rel","image","link","AuthorDetail","setError","authorResponse","postsResponse","isArray","err","fetchAuthorDetails","getPostImage","source_url","getPostCategories","App","Router","Routes","Route","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.60ce86c9.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Header.css';\nimport { useNavigate, Link, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\n// import NavDropdown from 'react-bootstrap/NavDropdown';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'; // Import the search icon\n\n\nconst Header = () => {\n    const [logoUrl, setLogoUrl] = useState('');\n    const [logoAlt, setLogoAlt] = useState('');\n    const [logoWidth, setLogoWidth] = useState('');\n    const [logoHeight, setLogoHeight] = useState('');\n    // const [menuItems, setMenuItems] = useState([]);\n    const [categories, setCategories] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n    // const [isSearchOpen, setIsSearchOpen] = useState(false); // Search toggle state\n    const navigate = useNavigate();\n    const location = useLocation(); // Get the current route\n\n    useEffect(() => {\n        const fetchLogo = async () => {\n            try {\n                const response = await axios.get('https://meetanshi.com/blog/wp-json/acf/v3/options');\n                const logoField = response.data.mobile_logo;\n\n                if (logoField) {\n                    setLogoUrl(logoField.url);\n                    setLogoAlt(logoField.alt || 'Mobile Logo');\n                    setLogoWidth(logoField.width);\n                    setLogoHeight(logoField.height);\n                }\n            } catch (error) {\n                console.error('Error fetching the mobile logo:', error);\n            }\n        };\n\n        // const fetchMenuItems = async () => {\n        //     try {\n        //         const response = await axios.get('https://meetanshi.com/blog/wp-json/custom/v1/menus/13');\n        //         setMenuItems(response.data);\n        //     } catch (error) {\n        //         console.error('Error fetching menu items:', error);\n        //     }\n        // };\n    \n\n        const fetchCategories = async () => {\n            try {\n                const response = await axios.get('https://meetanshi.com/blog/wp-json/wp/v2/categories');\n                const filteredCategories = response.data.filter(category => category.id !== 1);\n                setCategories(filteredCategories);\n            } catch (error) {\n                console.error('Error fetching categories:', error);\n            }\n        };\n\n        fetchLogo();\n        // fetchMenuItems();\n        fetchCategories();\n    }, []);\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        if (searchTerm) {\n            navigate(`/search?query=${searchTerm}`);\n        }\n    };\n\n    // Check if we are on the home page\n    const isHomePage = location.pathname === '/';\n\n    // Toggle search form on button click\n    // const toggleSearch = () => {\n    //     setIsSearchOpen(!isSearchOpen);\n    // };\n\n    return (\n        <>\n            {/* Header Section */}\n            <header className=\"header-main\">\n                <Navbar expand=\"lg\">\n                    <Container>\n                            <Navbar.Brand href=\"/\" className=\"d-inline-block\" title=\"Meetanshi Logo\">\n                                <img \n                                    src={logoUrl} \n                                    alt={logoAlt} \n                                    width={logoWidth} \n                                    height={logoHeight} \n                                    loading=\"lazy\" \n                                />\n                            </Navbar.Brand>\n                            <Navbar.Toggle aria-controls=\"navbarScroll\" />\n                            <Navbar.Collapse id=\"navbarScroll\">\n                            <Nav className=\"me-auto ms-auto my-2 my-lg-0 navbar-nav-scroll\">\n                                {/* {menuItems.map(item => (\n                                    <React.Fragment key={item.ID}>\n                                        {item.children ? (\n                                            <NavDropdown\n                                                title={item.title}\n                                                id={`navbarScrollingDropdown-${item.ID}`}\n                                                className=\"menu-dropdown\"\n                                            >\n                                                {item.children.map(child => (\n                                                    <NavDropdown.Item key={child.ID} href={child.url}>\n                                                        {child.title}\n                                                    </NavDropdown.Item>\n                                                ))}\n                                            </NavDropdown>\n                                        ) : (\n                                            <Nav.Link href={item.url}>{item.title}</Nav.Link>\n                                        )}\n                                    </React.Fragment>\n                                ))} */}\n                            </Nav>\n                            <Form className=\"d-flex\" onSubmit={handleSearch}>\n                                <Form.Control\n                                    type=\"search\"\n                                    placeholder=\"Search\"\n                                    className=\"me-2\"\n                                    aria-label=\"Search\"\n                                    value={searchTerm}\n                                    onChange={(e) => setSearchTerm(e.target.value)}\n                                />\n                                <Button variant=\"outline-success\" type=\"submit\"><FontAwesomeIcon icon={faSearch}/></Button>\n                            </Form>\n                        </Navbar.Collapse>\n                    </Container>\n                </Navbar>\n            </header>\n\n            {/* Conditionally render hero section based on current route */}\n                {isHomePage && (\n                    <section className=\"hero-section\">\n                        <Container>\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"hero-section-wrapper text-center\">\n                                        <h1 className=\"home-hero-title\">Get Better at E-commerce & Marketing</h1>\n                                        <h5 className=\"home-hero-subtitle\">Find expert articles on Magento, Shopify, and Digital Marketing topics</h5>\n                                    </div>\n                                </div>\n                            </div>\n                            {/* <div className=\"row\">\n                                <div className=\"col-md-8 offset-md-2\">\n                                    <Form className=\"d-flex hero-form-main\" onSubmit={handleSearch}>\n                                        <Form.Control\n                                            type=\"search\"\n                                            placeholder=\"Search\"\n                                            className=\"me-2\"\n                                            aria-label=\"Search\"\n                                            value={searchTerm}\n                                            onChange={(e) => setSearchTerm(e.target.value)}\n                                        />\n                                        <Button variant=\"outline-success\" type=\"submit\"> <FontAwesomeIcon icon={faSearch}/></Button>\n                                    </Form>\n                                </div>\n                            </div> */}\n                            <ul className=\"hero-category-list\">\n                            <li>\n                                <Link \n                                    to=\"/\" \n                                    className={location.pathname === '/' ? 'active' : ''}\n                                >\n                                    All\n                                </Link>\n                            </li>\n                                {categories.map((category) => (\n                                    <li key={category.id}><Link to={`/category/${category.slug}`}>{category.name}</Link></li>\n                                ))}\n                            </ul>\n                        </Container>\n                    </section>\n                )}\n        </>\n    );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport Cookies from 'js-cookie'; // Import js-cookie\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [stickyPosts, setStickyPosts] = useState([]); // State to store sticky posts\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const postsPerPage = 10;\n\n  useEffect(() => {\n    // Fetch regular and sticky posts\n    const fetchPosts = async () => {\n      try {\n        // Fetch regular posts\n        const response = await axios.get(`https://meetanshi.com/blog/wp-json/wp/v2/posts?_embed&per_page=${postsPerPage}&page=${currentPage}`);\n        setPosts(response.data);\n\n        // Store posts in cookies (expires in 1 day)\n        Cookies.set('posts', JSON.stringify(response.data), { expires: 1, path: '/' });\n\n        const totalPosts = response.headers['x-wp-total'];\n        setTotalPages(Math.ceil(totalPosts / postsPerPage));\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Fetch sticky posts\n    const fetchStickyPosts = async () => {\n      try {\n        const response = await axios.get(`https://meetanshi.com/blog/wp-json/wp/v2/posts?_embed&sticky=true`);\n        setStickyPosts(response.data); // Store sticky posts in state\n      } catch (error) {\n        console.error('Error fetching sticky posts:', error);\n      }\n    };\n\n    fetchPosts();\n    fetchStickyPosts();\n  }, [currentPage]);\n\n// Function to get author link with profile picture\nconst getAuthorLink = (post) => {\n  const author = post._embedded && post._embedded.author && post._embedded.author[0];\n  if (author) {\n    const authorImage = author.avatar_urls ? author.avatar_urls['96'] : 'https://via.placeholder.com/50';\n    return (\n      <Link to={`/author/${author.slug}`} className=\"author-link\">\n        <img\n          src={authorImage}\n          alt={author.name}\n          style={{ width: '30px', height: '30px', borderRadius: '50%', marginRight: '10px' }}\n        />\n        {author.name}\n      </Link>\n    );\n  }\n  return 'Unknown Author';\n};\n\n\n  // Function to handle pagination\n  const handlePageClick = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    navigate(`${location.pathname}?page=${pageNumber}`);\n  };\n\n  const renderPagination = () => {\n    const paginationItems = [];\n    const range = 1; // Number of pages to show before and after the current page\n  \n    // Previous Page\n    if (currentPage > 1) {\n      paginationItems.push(\n        <li className=\"page-item\" key=\"prev\">\n          <button className=\"page-link\" onClick={() => handlePageClick(currentPage - 1)}>Previous</button>\n        </li>\n      );\n    }\n  \n    // First Page\n    if (totalPages > 0) {\n      paginationItems.push(\n        <li className={`page-item ${currentPage === 1 ? 'active' : ''}`} key={1}>\n          <button className=\"page-link\" onClick={() => handlePageClick(1)}>1</button>\n        </li>\n      );\n    }\n  \n    // Ellipses for omitted pages before current page\n    if (currentPage > range + 2) {\n      paginationItems.push(<li className=\"page-item disabled\" key=\"ellipsis1\"><span className=\"page-link\">...</span></li>);\n    }\n  \n    // Page Numbers\n    for (let page = Math.max(2, currentPage - range); page <= Math.min(totalPages - 1, currentPage + range); page++) {\n      paginationItems.push(\n        <li className={`page-item ${currentPage === page ? 'active' : ''}`} key={page}>\n          <button className=\"page-link\" onClick={() => handlePageClick(page)}>{page}</button>\n        </li>\n      );\n    }\n  \n    // Ellipses for omitted pages after current page\n    if (currentPage < totalPages - range - 1) {\n      paginationItems.push(<li className=\"page-item disabled\" key=\"ellipsis2\"><span className=\"page-link\">...</span></li>);\n    }\n  \n    // Last Page\n    if (totalPages > 1) {\n      paginationItems.push(\n        <li className={`page-item ${currentPage === totalPages ? 'active' : ''}`} key={totalPages}>\n          <button className=\"page-link\" onClick={() => handlePageClick(totalPages)}>{totalPages}</button>\n        </li>\n      );\n    }\n  \n    // Next Page\n    if (currentPage < totalPages) {\n      paginationItems.push(\n        <li className=\"page-item\" key=\"next\">\n          <button className=\"page-link\" onClick={() => handlePageClick(currentPage + 1)}>Next</button>\n        </li>\n      );\n    }\n  \n    return paginationItems;\n  };\n\n  return (\n    <div>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <>\n          {/* Sticky Post Section */}\n          {stickyPosts.length > 0 && (\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <div className=\"sticky-post-home\">\n                    {stickyPosts.map((post) => (\n                      <div key={post.id} className=\"sticky-post-item text-center\">\n                        {/* <img\n                          src={getPostThumbnail(post)}\n                          alt={post.title.rendered}\n                          style={{ width: '100%', height: 'auto' }}\n                        /> */}\n                        <p className=\"author-name-date\"><span>{getAuthorLink(post)}</span> <span>{new Date(post.date).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' })}</span></p>\n                        <Link className=\"sticky-post-title-link\" to={`/post/${post.slug}`}>\n                          <h2 className=\"sticky-post-title\" dangerouslySetInnerHTML={{ __html: post.title.rendered }}></h2>\n                        </Link>\n                        <p dangerouslySetInnerHTML={{ __html: post.excerpt.rendered }}></p>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Regular Posts Section */}\n          <div className=\"row mt-5 regular-post-main\">\n            {posts.map((post) => (\n              \n              <div className=\"col-md-6 text-left regular-post-col mb-5\" key={post.id}>\n                <div className=\"regular-post-wrapper\">\n                {/* <img\n                  src={getPostThumbnail(post)}\n                  alt={post.title.rendered}\n                  style={{ width: '100%', height: 'auto' }}\n                /> */}\n                <Link className=\"post-title-link\"  to={`/post/${post.slug}`}>\n                  <h3 className=\"post-title\" dangerouslySetInnerHTML={{ __html: post.title.rendered }}></h3> {/* Render post title with HTML entities decoded */}\n                </Link>\n                <p dangerouslySetInnerHTML={{ __html: post.excerpt.rendered }}></p>\n                <p className=\"author-name-date\"><span>{getAuthorLink(post)}</span> <span>{new Date(post.date).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' })}</span></p>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* Pagination Section */}\n          {totalPages > 1 && (\n            <nav aria-label=\"Page navigation\" className=\"pagination-main mt-3\">\n              <ul className=\"pagination justify-content-center\">\n                {renderPagination()}\n              </ul>\n            </nav>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Posts;\n","import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useParams, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; // Import FontAwesome\nimport { faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons'; // Import icons\nimport './PostDetail.css'; // Assuming you have a CSS file for styles\n\nconst PostDetail = () => {\n  const { slug } = useParams(); // Get post slug from URL\n  const [post, setPost] = useState(null);\n  const [author, setAuthor] = useState(null);\n  const [sidebarHtml, setSidebarHtml] = useState('');\n  const [comments, setComments] = useState([]);\n  const [loadingComments, setLoadingComments] = useState(true);\n  const [headings, setHeadings] = useState([]);\n  const [comment, setComment] = useState('');\n  const [authorName, setAuthorName] = useState('');\n  const [authorEmail, setAuthorEmail] = useState('');\n  const [commentError, setCommentError] = useState('');\n  const [commentSuccess, setCommentSuccess] = useState('');\n  const [tocVisible, setTocVisible] = useState(false); // State for TOC visibility\n  const contentRef = useRef(null);\n\n  const calculateReadingTime = (content) => {\n    const wordCount = content ? content.split(/\\s+/).filter((word) => word).length : 0;\n    const readingTime = Math.ceil(wordCount / 200);\n    return `${readingTime} min`;\n  };\n\n  // Fetch post details by slug\n  useEffect(() => {\n    if (!slug) return;\n  \n    axios\n      .get(`https://meetanshi.com/blog/wp-json/wp/v2/posts?slug=${slug}&_embed&_=${new Date().getTime()}`)\n      .then((response) => {\n        const postData = response.data[0];\n        setPost(postData);\n        console.log(postData);\n  \n        // Check if author is embedded\n        const authorData = postData._embedded?.author?.[0];\n        if (authorData) {\n          setAuthor(authorData); // Set author from embedded data\n        } else {\n          console.error('No embedded author data found');\n        }\n      })\n      .catch((error) => {\n        console.error('Error fetching post:', error);\n        if (error.response) {\n          console.error('Error Response:', error.response.data);\n          console.error('Status:', error.response.status);\n        }\n      });\n  }, [slug]);\n  \n\n  \n\n  // Fetch comments for the post\n  useEffect(() => {\n    if (post) {\n      const fetchComments = async () => {\n        try {\n          const response = await axios.get(`https://meetanshi.com/blog/wp-json/wp/v2/comments?post=${post.id}`);\n          // Sorting comments in descending order\n          const sortedComments = response.data.sort((a, b) => new Date(b.date) - new Date(a.date));\n          setComments(sortedComments);\n        } catch (error) {\n          console.error('Error fetching comments:', error);\n        } finally {\n          setLoadingComments(false);\n        }\n      };\n\n      fetchComments();\n    }\n  }, [post]);\n\n  // Fetch sidebar HTML\n  useEffect(() => {\n    if (post && post.selected_sidebar) {\n      axios\n        .get(`https://meetanshi.com/blog/wp-json/wp/v2/sidebar/${post.selected_sidebar}`)\n        \n        .then((response) => {\n          setSidebarHtml(response.data);\n          console.log('Error fetching comments:' ,response.data);\n        })\n        .catch((error) => {\n          console.error('Error fetching sidebar:', error);\n        });\n    }\n  }, [post]);\n\n  // Extract headings from post content\n  useEffect(() => {\n    if (post) {\n      const contentElement = contentRef.current;\n      if (contentElement) {\n        const extractedHeadings = Array.from(contentElement.querySelectorAll('h1, h2, h3, h4, h5, h6')).map(\n          (heading) => {\n            const id = heading.innerText.replace(/\\s+/g, '-').toLowerCase();\n            heading.id = id;\n            return {\n              id,\n              text: heading.innerText,\n              level: parseInt(heading.tagName.replace('H', ''), 10),\n            };\n          }\n        );\n        setHeadings(extractedHeadings);\n      }\n    }\n  }, [post]);\n\n  // Scroll to heading section\n  const scrollToHeading = (id) => {\n    const element = document.getElementById(id);\n    if (element) {\n      window.scrollTo({\n        top: element.offsetTop - 80,\n        behavior: 'smooth',\n      });\n    }\n  };\n\n  // Handle new comment submission\n  const handleCommentSubmit = (e) => {\n    e.preventDefault();\n    const newComment = {\n      post: post.id,\n      author_name: authorName,\n      author_email: authorEmail,\n      content: comment,\n    };\n\n    axios\n      .post('https://meetanshi.com/blog/wp-json/wp/v2/comments', newComment)\n      .then((response) => {\n        setComments([response.data, ...comments]); // Prepend new comment\n        setComment('');\n        setAuthorName('');\n        setAuthorEmail('');\n        setCommentSuccess('Your comment has been submitted!');\n        setCommentError('');\n      })\n      .catch((error) => {\n        setCommentError('Failed to submit comment.');\n        setCommentSuccess('');\n      });\n  };\n\n  // Toggle TOC visibility\n  const toggleToc = () => {\n    setTocVisible(!tocVisible);\n  };\n\n  // Helper function to format date\n  const formatDate = (dateString) => {\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  // Recursive function to display nested comments\n  const renderComments = (commentList, parentId = 0) => {\n    return commentList\n      .filter((comment) => comment.parent === parentId)\n      .map((comment) => (\n        <div key={comment.id} className={`comment-item ${comment.parent !== 0 ? 'nested-comment' : ''}`}>\n          <div className=\"comment-avatar\">\n            <div className=\"comment-avatar-img\">\n              <span>{comment.author_name.charAt(0)}</span>\n            </div>\n          </div>\n          <div className=\"comment-body\">\n            <h5>{comment.author_name}</h5>\n            <p className=\"comment-date\">on {formatDate(comment.date)}</p>\n            <div dangerouslySetInnerHTML={{ __html: comment.content.rendered }} />\n            <button className=\"reply-button\">Reply</button>\n            {renderComments(commentList, comment.id)} {/* Recursively render replies */}\n          </div>\n        </div>\n      ));\n  };\n\n  if (!post) {\n    return <div>Loading...</div>;\n  }\n\n  // Breadcrumbs Logic\n  const renderBreadcrumbs = () => {\n    return (\n      <ul className=\"breadcrumbs\">\n        <li>\n          <Link to=\"/\">Blog</Link>\n        </li>\n        <li>\n          <span className=\"home-heading\" dangerouslySetInnerHTML={{ __html: post.title.rendered.replace(/&amp;/g, '&') }} ></span>\n        </li>\n      </ul>\n    );\n  };\n\n  return (\n    <div className=\"post-detail-container\">\n      <div className=\"post-content\">\n        <div className=\"container-lg container-fluid-md\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"cat-hero-section\">\n                <div className=\"home-hero-wrapper text-center\">\n                  {/* Breadcrumbs */}\n                  {renderBreadcrumbs()}\n                  <h1 className=\"home-heading\" dangerouslySetInnerHTML={{ __html: post.title.rendered.replace(/&amp;/g, '&') }} ></h1>\n                  {post && <p className=\"reading-time\">{calculateReadingTime(post.content.rendered)} read</p>}\n                  {author && <p>By {author.name}</p>}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"container mt-3\">\n          <div className=\"row\">\n            <div className=\"col-md-9\">\n              {/* Post Content */}\n              <div className=\"blog-content-wrapper\" ref={contentRef} dangerouslySetInnerHTML={{ __html: post.content.rendered }} />\n              {/* Comments Section */}\n              <div className=\"comments-section\">\n                <h3>Discussion</h3>\n                {loadingComments ? (\n                  <p>Loading comments...</p>\n                ) : comments.length > 0 ? (\n                  <div className=\"comments-list\">{renderComments(comments)}</div>\n                ) : (\n                  <p>No comments yet.</p>\n                )}\n              </div>\n              {/* Leave a Reply Form */}\n              <div className=\"leave-reply-form\">\n                <h3>Leave a Reply</h3>\n                {commentSuccess && <p className=\"success-message\">{commentSuccess}</p>}\n                {commentError && <p className=\"error-message\">{commentError}</p>}\n                <form onSubmit={handleCommentSubmit}>\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      <label htmlFor=\"comment\">Comment</label>\n                      <textarea\n                        id=\"comment\"\n                        value={comment}\n                        onChange={(e) => setComment(e.target.value)}\n                        required\n                      />\n                    </div>\n                    <div className=\"col-md-6\">\n                      <label htmlFor=\"author-name\">Name</label>\n                      <input\n                        id=\"author-name\"\n                        type=\"text\"\n                        value={authorName}\n                        onChange={(e) => setAuthorName(e.target.value)}\n                        required\n                      />\n                    </div>\n                    <div className=\"col-md-6\">\n                      <label htmlFor=\"author-email\">Email</label>\n                      <input\n                        id=\"author-email\"\n                        type=\"email\"\n                        value={authorEmail}\n                        onChange={(e) => setAuthorEmail(e.target.value)}\n                        required\n                      />\n                    </div>\n                    <div className=\"col-md-12\">\n                      <button type=\"submit\" className=\"submit-comment-btn\">Post Comment</button>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n            <div className=\"col-md-3\">\n              {/* Table of Contents */}\n              <div className=\"toc\">\n                <button className=\"toc-toggle\" onClick={toggleToc}>\n                  {tocVisible ? (\n                    <>\n                      Table of Content <FontAwesomeIcon icon={faChevronUp} /> \n                    </>\n                  ) : (\n                    <>\n                      Table of Content <FontAwesomeIcon icon={faChevronDown} />\n                    </>\n                  )}\n                </button>\n                {tocVisible && (\n                  <ul className=\"toc-content\">\n                    {headings.map((heading) => (\n                      <li key={heading.id} className={`toc-level-${heading.level}`}>\n                        <button onClick={() => scrollToHeading(heading.id)}>{heading.text}</button>\n                      </li>\n                    ))}\n                  </ul>\n                )}\n              </div>\n\n              {/* Author Information */}\n              <div className=\"author-info text-center\">\n                {author && (\n                  <>\n                    {author.avatar_urls && author.avatar_urls[96] ? (\n                      <img\n                        src={author.avatar_urls[96]}\n                        alt={`${author.name}'s avatar`}\n                        width=\"96\"\n                        height=\"96\"\n                      />\n                    ) : (\n                      <p>No avatar available.</p>\n                    )}\n                    <h4>{author.name}</h4>\n                    \n                    {/* Trim description to 30 words and add 'Read More' */}\n                    {author.description ? (\n                      <>\n                        <p>\n                          {author.description.split(' ').slice(0, 30).join(' ')}...{' '}\n                          <a href={`/author/${author.slug}`}>Read more</a>\n                        </p>\n                      </>\n                    ) : (\n                      <p>No description available.</p>\n                    )}\n                  </>\n                )}\n              </div>\n              {/* Sidebar HTML */}\n              <div dangerouslySetInnerHTML={{ __html: sidebarHtml }} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostDetail;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './CategoryDetail.css';\nimport { useParams, Link, useNavigate, useLocation } from 'react-router-dom';\n\nconst CategoryDetail = () => {\n  const { slug } = useParams();\n  const [category, setCategory] = useState({});\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [categories, setCategories] = useState([]); // Add categories state\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const postsPerPage = 10;\n\n  useEffect(() => {\n    const fetchCategory = async () => {\n      try {\n        const response = await axios.get(`https://meetanshi.com/blog/wp-json/wp/v2/categories?slug=${slug}`);\n        if (response.data.length > 0) {\n          const categoryData = response.data[0];\n          setCategory(categoryData);\n        } else {\n          console.error('Category not found');\n        }\n      } catch (error) {\n        console.error('Error fetching category:', error);\n      }\n    };\n\n    const fetchPostsByCategory = async () => {\n      try {\n        const response = await axios.get(`https://meetanshi.com/blog/wp-json/wp/v2/posts?categories=${category.id}&_embed&per_page=${postsPerPage}&page=${currentPage}`);\n        setPosts(response.data);\n        const totalPosts = response.headers['x-wp-total'];\n        setTotalPages(Math.ceil(totalPosts / postsPerPage));\n      } catch (error) {\n        console.error('Error fetching posts for category:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const fetchCategories = async () => {\n      try {\n        const response = await axios.get('https://meetanshi.com/blog/wp-json/wp/v2/categories');\n        const filteredCategories = response.data.filter(category => category.id !== 1); // Exclude 'Uncategorized'\n        setCategories(filteredCategories); // Set categories state\n      } catch (error) {\n        console.error('Error fetching categories:', error);\n      }\n    };\n\n    fetchCategory();\n    fetchPostsByCategory();\n    fetchCategories();\n  }, [slug, category.id, currentPage]);\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const page = parseInt(queryParams.get('page')) || 1;\n    setCurrentPage(page);\n  }, [location.search]);\n\n  // Function to handle page click for pagination\n  const handlePageClick = (page) => {\n    setCurrentPage(page);\n    navigate(`?page=${page}`);\n  };\n\n  // Function to get the author link for each post\n  const getAuthorLink = (post) => {\n    const author = post._embedded && post._embedded.author && post._embedded.author[0];\n    if (author) {\n      const authorImage = author.avatar_urls ? author.avatar_urls['96'] : 'https://via.placeholder.com/50';\n      return (\n        <Link to={`/author/${author.slug}`} className=\"author-link\">\n          <img\n            src={authorImage}\n            alt={author.name}\n            style={{ width: '30px', height: '30px', borderRadius: '50%', marginRight: '10px' }}\n          />\n          {author.name}\n        </Link>\n      );\n    }\n    return 'Unknown Author';\n  };\n\n  const handleCategoryClick = (categorySlug) => {\n    setCurrentPage(1); // Reset to the first page when changing categories\n    navigate(`/category/${categorySlug}`); // Navigate to the new category\n  };\n\n  const renderCategoryList = () => {\n    return (\n      <div className=\"category-list-filter mb-4\">\n        <ul className=\"category-list\">\n          <li>\n            <Link to=\"/\" className=\"category-link\"> {/* Link to homepage */}\n              All\n            </Link>\n          </li>\n          {categories.map((cat) => (\n            <li\n              key={cat.id}\n              className={`category-item ${cat.slug === slug ? 'active' : ''}`} // Add active class if category is selected\n            >\n              <button onClick={() => handleCategoryClick(cat.slug)} className=\"category-link\">\n                {cat.name}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  };\n\n  const renderPagination = () => {\n    const paginationItems = [];\n    const range = 1;\n\n    if (currentPage > 1) {\n      paginationItems.push(\n        <li className=\"page-item\" key=\"prev\">\n          <button className=\"page-link\" onClick={() => handlePageClick(currentPage - 1)}>Previous</button>\n        </li>\n      );\n    }\n\n    if (totalPages > 0) {\n      paginationItems.push(\n        <li className={`page-item ${currentPage === 1 ? 'active' : ''}`} key={1}>\n          <button className=\"page-link\" onClick={() => handlePageClick(1)}>1</button>\n        </li>\n      );\n    }\n\n    if (currentPage > range + 2) {\n      paginationItems.push(<li className=\"page-item disabled\" key=\"ellipsis1\"><span className=\"page-link\">...</span></li>);\n    }\n\n    for (let page = Math.max(2, currentPage - range); page <= Math.min(totalPages - 1, currentPage + range); page++) {\n      paginationItems.push(\n        <li className={`page-item ${currentPage === page ? 'active' : ''}`} key={page}>\n          <button className=\"page-link\" onClick={() => handlePageClick(page)}>{page}</button>\n        </li>\n      );\n    }\n\n    if (currentPage < totalPages - range - 1) {\n      paginationItems.push(<li className=\"page-item disabled\" key=\"ellipsis2\"><span className=\"page-link\">...</span></li>);\n    }\n\n    if (totalPages > 1) {\n      paginationItems.push(\n        <li className={`page-item ${currentPage === totalPages ? 'active' : ''}`} key={totalPages}>\n          <button className=\"page-link\" onClick={() => handlePageClick(totalPages)}>{totalPages}</button>\n        </li>\n      );\n    }\n\n    if (currentPage < totalPages) {\n      paginationItems.push(\n        <li className=\"page-item\" key=\"next\">\n          <button className=\"page-link\" onClick={() => handlePageClick(currentPage + 1)}>Next</button>\n        </li>\n      );\n    }\n\n    return paginationItems;\n  };\n\n  return (\n    <div>\n      <div className=\"container-lg container-fluid-md\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"cat-hero-section\">\n              <div className=\"home-hero-wrapper text-center\">\n                <h1 className=\"home-heading\">{category.name}</h1>\n                <p>{category.description}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Render Category Filter */}\n      {renderCategoryList()}\n\n      {loading ? (\n        <p>Loading...</p>\n      ) : posts.length > 0 ? (\n        <div className=\"row mt-5 regular-post-main\">\n          {posts.map((post) => (\n            <div className=\"col-md-6 text-left regular-post-col mb-5\" key={post.id}>\n              <div className=\"regular-post-wrapper\">\n                <Link className=\"post-title-link\" to={`/post/${post.slug}`}>\n                  <h3 className=\"post-title\" dangerouslySetInnerHTML={{ __html: post.title.rendered }}></h3>\n                </Link>\n                <p dangerouslySetInnerHTML={{ __html: post.excerpt.rendered }}></p>\n                <p className=\"author-name-date\">\n                  <span>{getAuthorLink(post)}</span>\n                  <span>{new Date(post.date).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' })}</span>\n                </p>\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <p>No posts found.</p>\n      )}\n\n      {/* Pagination Section */}\n      {totalPages > 1 && (\n        <nav aria-label=\"Page navigation\" className=\"pagination-main mt-3\">\n          <ul className=\"pagination justify-content-center\">\n            {renderPagination()}\n          </ul>\n        </nav>\n      )}\n    </div>\n  );\n};\n\nexport default CategoryDetail;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\n//import './SearchResults.css'; // Import your CSS file for styling\n\nconst SearchResults = () => {\n    const [posts, setPosts] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(1);\n    const location = useLocation();\n    const navigate = useNavigate();\n    const postsPerPage = 6; \n\n    // Extract query from URL\n    const query = new URLSearchParams(location.search).get('query');\n\n    useEffect(() => {\n        const fetchSearchResults = async () => {\n            try {\n                if (query) {\n                    const response = await axios.get(`https://meetanshi.com/blog/wp-json/wp/v2/posts?search=${query}&_embed&per_page=${postsPerPage}&page=${currentPage}`);\n                    setPosts(response.data);\n                    const totalPosts = response.headers['x-wp-total'];\n                    setTotalPages(Math.ceil(totalPosts / postsPerPage));\n                }\n            } catch (error) {\n                console.error('Error fetching search results:', error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchSearchResults();\n    }, [query, currentPage]);\n\n    const handlePageClick = (pageNumber) => {\n        setCurrentPage(pageNumber);\n        navigate(`${location.pathname}?query=${query}&page=${pageNumber}`);\n    };\n\n    const getAuthorLink = (post) => {\n        const author = post._embedded && post._embedded.author && post._embedded.author[0];\n        if (author) {\n          const authorImage = author.avatar_urls ? author.avatar_urls['96'] : 'https://via.placeholder.com/50';\n          return (\n            <Link to={`/author/${author.slug}`} className=\"author-link\">\n              <img\n                src={authorImage}\n                alt={author.name}\n                style={{ width: '30px', height: '30px', borderRadius: '50%', marginRight: '10px' }}\n              />\n              {author.name}\n            </Link>\n          );\n        }\n        return 'Unknown Author';\n      };\n\n    const renderPagination = () => {\n        const paginationItems = [];\n\n        if (currentPage > 1) {\n            paginationItems.push(\n                <li className=\"page-item\" key=\"prev\">\n                    <button className=\"page-link\" onClick={() => handlePageClick(currentPage - 1)}>\n                        Previous\n                    </button>\n                </li>\n            );\n        }\n\n        if (currentPage !== 1) {\n            paginationItems.push(\n                <li key={1} className={`page-item ${currentPage === 1 ? 'active' : ''}`}>\n                    <button className=\"page-link\" onClick={() => handlePageClick(1)}>1</button>\n                </li>\n            );\n        }\n\n        if (currentPage > 3) {\n            paginationItems.push(\n                <li key=\"ellipsis-prev\" className=\"page-item disabled\">\n                    <span className=\"page-link\">...</span>\n                </li>\n            );\n        }\n\n        if (currentPage > 2) {\n            paginationItems.push(\n                <li key={currentPage - 1} className=\"page-item\">\n                    <button className=\"page-link\" onClick={() => handlePageClick(currentPage - 1)}>\n                        {currentPage - 1}\n                    </button>\n                </li>\n            );\n        }\n\n        paginationItems.push(\n            <li key={currentPage} className=\"page-item active\">\n                <span className=\"page-link\">{currentPage}</span>\n            </li>\n        );\n\n        if (currentPage < totalPages - 1) {\n            paginationItems.push(\n                <li key={currentPage + 1} className=\"page-item\">\n                    <button className=\"page-link\" onClick={() => handlePageClick(currentPage + 1)}>\n                        {currentPage + 1}\n                    </button>\n                </li>\n            );\n        }\n\n        if (currentPage < totalPages - 2) {\n            paginationItems.push(\n                <li key=\"ellipsis-next\" className=\"page-item disabled\">\n                    <span className=\"page-link\">...</span>\n                </li>\n            );\n        }\n\n        if (currentPage !== totalPages) {\n            paginationItems.push(\n                <li key={totalPages} className={`page-item ${currentPage === totalPages ? 'active' : ''}`}>\n                    <button className=\"page-link\" onClick={() => handlePageClick(totalPages)}>\n                        {totalPages}\n                    </button>\n                </li>\n            );\n        }\n\n        if (currentPage < totalPages) {\n            paginationItems.push(\n                <li className=\"page-item\" key=\"next\">\n                    <button className=\"page-link\" onClick={() => handlePageClick(currentPage + 1)}>\n                        Next\n                    </button>\n                </li>\n            );\n        }\n\n        return paginationItems;\n    };\n\n    return (\n        <div className=\"search-results\">\n                  <div className=\"container-lg container-fluid-md\">\n                    <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"cat-hero-section\">\n                        <div className=\"home-hero-wrapper text-center\">\n                            <h2 className=\"home-heading\">Search Results for: \"{query}\"</h2>\n                        </div>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n            <div className=\"container\">                \n                {loading ? (\n                    <p className=\"text-center\">Loading...</p>\n                ) : (\n                    <div className=\"row mt-5 regular-post-main\">\n                        {posts.length > 0 ? (\n                            posts.map((post) => (\n                                <div className=\"col-md-6 text-left regular-post-col mb-5\" key={post.id}>\n                                    <div className=\"regular-post-wrapper\">\n                                    <Link className=\"post-title-link\" to={`/post/${post.slug}`}>\n                                    <h3 className=\"post-title\" dangerouslySetInnerHTML={{ __html: post.title.rendered }}></h3>\n                                    </Link>\n                                    <p dangerouslySetInnerHTML={{ __html: post.excerpt.rendered }}></p>\n                                    <p className=\"author-name-date\">\n                                    <span>{getAuthorLink(post)}</span>\n                                    <span>{new Date(post.date).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' })}</span>\n                                    </p>\n                                </div>\n                                </div>\n                            ))\n                        ) : (\n                            <p className=\"text-center\">No results found for \"{query}\".</p>\n                        )}\n                    </div>\n                )}\n\n                {totalPages > 1 && (\n                    <nav aria-label=\"Page navigation\">\n                        <ul className=\"pagination justify-content-center\">\n                            {renderPagination()}\n                        </ul>\n                    </nav>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default SearchResults;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Footer.css'; // Optional: Create a CSS file for styling\n\nconst Footer = () => {\n  const [footerData, setFooterData] = useState({\n    footer_logo: null,\n    address_india: '',\n    address_usa: '',\n    phone: '',\n    social_ratings: [],\n    net_zero_website: null,\n    social_icons: [],\n    copyright: '',\n    footer_links: [],\n  });\n\n  const [quickLinks, setQuickLinks] = useState([]);\n  const [serviceMenu, setServiceMenu] = useState([]);\n\n  // Fetch footer data from custom WordPress REST API\n  useEffect(() => {\n    const fetchFooterData = async () => {\n      try {\n        const response = await axios.get('https://meetanshi.com/blog/wp-json/custom/v1/footer-data');\n        setFooterData(response.data);\n      } catch (error) {\n        console.error('Error fetching footer data:', error);\n      }\n    };\n\n    fetchFooterData();\n  }, []);\n\n  // Fetch footer menus data\n  useEffect(() => {\n    const fetchFooterMenus = async () => {\n      try {\n        const response = await axios.get('https://meetanshi.com/blog/wp-json/footer-menus/v1/get-menus');\n        setQuickLinks(response.data.quick_links);\n        setServiceMenu(response.data.service_menu);\n      } catch (error) {\n        console.error('Error fetching footer menus:', error);\n      }\n    };\n\n    fetchFooterMenus();\n  }, []);\n\n  // Render menu items\n  const renderMenuItems = (menuItems) => {\n    return menuItems.map((item) => (\n      <li key={item.id}>\n        <a href={item.url}>{item.title}</a>\n      </li>\n    ));\n  };\n\n  // Render social icons\n  const renderSocialIcons = () => {\n    return footerData.social_icons.map((icon, index) => (\n      <li key={index}>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={icon.url} title={icon.name}>\n          <i className={icon.icon}></i> {/* Assuming icon.icon contains the full Font Awesome class */}\n        </a>\n      </li>\n    ));\n  };\n\n  return (\n    <footer className=\"site-footer\">\n      <div className=\"container mb-5\">\n        <div className=\"row justify-content-between\">\n          <div className=\"col-auto\">\n            {/* Footer Logo */}\n            {footerData.footer_logo && (\n              <div className=\"footer-logo\">\n                <a href=\"/\">\n                  <img\n                    src={footerData.footer_logo.url}\n                    alt={footerData.footer_logo.alt}\n                    width={footerData.footer_logo.width}\n                    height={footerData.footer_logo.height}\n                  />\n                </a>\n              </div>\n            )}\n            {/* Address India */}\n            {footerData.address_india && (\n              <div className=\"footer-address\">\n                <div className=\"d-flex align-items-start\">\n                  <img className=\"address-icon\" src=\"/images/location-icon.svg\" alt=\"Location Icon\" height=\"25\" width=\"24\" />\n                  <div>\n                    <p className=\"footer-address-title\">Bhavnagar<sup>HQ</sup></p>\n                    <p className=\"footer-address-text\">{footerData.address_india}</p>\n                  </div>\n                </div>\n              </div>\n            )}\n            {/* Address USA */}\n            {footerData.address_usa && (\n              <div className=\"footer-address\">\n                <div className=\"d-flex align-items-start\">\n                  <img className=\"address-icon\" src=\"/images/location-icon.svg\" alt=\"Location Icon\" height=\"25\" width=\"24\" />\n                  <div>\n                    <p className=\"footer-address-title\">USA Representative Office</p>\n                    <p className=\"footer-address-text\">{footerData.address_usa}</p>\n                  </div>\n                </div>\n              </div>\n            )}\n            {/* Phone */}\n            {footerData.phone && (\n              <div className=\"footer-phone\">\n                <div className=\"d-flex align-items-start\">\n                  <img className=\"address-icon\" src=\"/images/phone-icon.svg\" alt=\"Phone Icon\" height=\"25\" width=\"24\" />\n                  <div>\n                    <a className=\"footer-phone\" href={`tel:${footerData.phone}`}>{footerData.phone}</a>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Quick Links */}\n          <div className=\"col-auto\">\n            <div className=\"footer-col-wrapper\">\n              <p className=\"footer-menu-title\">Quick Links</p>\n              <ul className=\"footer-menu\">\n                {renderMenuItems(quickLinks)}\n              </ul>\n            </div>\n          </div>\n\n          {/* Customer Service */}\n          <div className=\"col-auto\">\n            <div className=\"footer-col-wrapper\">\n              <p className=\"footer-menu-title\">Customer Service</p>\n              <ul className=\"footer-menu\">\n                {renderMenuItems(serviceMenu)}\n              </ul>\n            </div>\n          </div>\n\n          {/* Client's Love Section */}\n          <div className=\"col-auto\">\n            <div className=\"footer-col-wrapper\">\n              <p className=\"footer-menu-title\">Client's Love</p>\n              {/* Social Ratings */}\n              {footerData.social_ratings && footerData.social_ratings.length > 0 && (\n                <ul className=\"footer-social-rating\">\n                  {footerData.social_ratings.map((rating, index) => (\n                    <li key={index}>\n                      <a target=\"_blank\" href={rating.url} rel=\"noopener noreferrer\">\n                        <picture>\n                          <img\n                            src={rating.image.url}\n                            alt={rating.image.alt}\n                            width={rating.image.width}\n                            height={rating.image.height}\n                          />\n                        </picture>\n                      </a>\n                    </li>\n                  ))}\n                </ul>\n              )}\n              {/* Social Media Icons */}\n              <div className=\"social-media\">\n                <ul>\n                  {renderSocialIcons()}\n                </ul>\n              </div>\n              {/* Net Zero Website */}\n              {footerData.net_zero_website && (\n                <div className=\"net-zero-website\">\n                  <a href={footerData.net_zero_website.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img\n                      src={footerData.net_zero_website.image.url}\n                      alt={footerData.net_zero_website.image.alt}\n                      height={footerData.net_zero_website.image.height}\n                      width={footerData.net_zero_website.image.width}\n                      loading=\"lazy\"\n                    />\n                  </a>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n       {/* Footer Copy Section */}\n       <div className=\"footer-copy\">\n          <div className=\"container\">\n            <div className=\"row align-items-center\">\n              <div className=\"col-md-6\">\n                {/* Display copyright if available */}\n                {footerData.copyright && (\n                  <div className=\"footer-copy-text\">\n                    {/* {footerData.copyright} */}\n                    <p>Copyright © 2017-2024 by Meetanshi Technologies LLP. All Rights Reserved.</p>\n                  </div>\n                )}\n              </div>\n              <div className=\"col-md-6 text-end\">\n                {/* Display footer links if available */}\n                {footerData.footer_links && footerData.footer_links.length > 0 && (\n                  <ul className=\"footer-copy-links\">\n                    {footerData.footer_links.map((link, index) => (\n                      <li key={index}>\n                        <a href={link.link.url} target={link.link.target}>\n                          {link.link.title}\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nconst AuthorDetail = () => {\n  const { slug } = useParams();\n  const [author, setAuthor] = useState(null);\n  const [posts, setPosts] = useState([]); // Ensure this is initialized as an array\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchAuthorDetails = async () => {\n      setLoading(true);\n      setError('');\n    \n      try {\n        // Fetch author details\n        const authorResponse = await axios.get(`https://meetanshi.com/blog/wp-json/wp/v2/users?slug=${slug}`);\n    \n        if (authorResponse.data.length > 0) {\n          const authorData = authorResponse.data[0];\n          setAuthor(authorData);\n    \n          // Fetch posts by author\n          const postsResponse = await axios.get(`https://meetanshi.com/blog/wp-json/wp/v2/posts?author=${authorData.id}&_embed`);\n          \n          // Log the entire posts response for debugging\n          console.log('Posts Response:', postsResponse);\n    \n          // Check if the data is an array\n          if (Array.isArray(postsResponse.data)) {\n            setPosts(postsResponse.data);\n          } else {\n            console.error('Posts response is not an array:', postsResponse.data);\n            setPosts([]); // Set to an empty array if response is not valid\n          }\n        } else {\n          setError('Author not found.');\n        }\n      } catch (err) {\n        console.error('Error fetching author details or posts:', err);\n        setError('Failed to load author details.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n\n    fetchAuthorDetails();\n  }, [slug]);\n\n  const getAuthorImage = () => {\n    return author?.avatar_urls ? author.avatar_urls[96] : 'https://via.placeholder.com/150';\n  };\n\n  const getPostCategories = (post) => {\n    if (post._embedded && post._embedded['wp:term']) {\n      return post._embedded['wp:term'][0].map((category) => category.name).join(', ');\n    }\n    return 'Uncategorized';\n  };\n\n  const getPostImage = (post) => {\n    if (post._embedded && post._embedded['wp:featuredmedia']) {\n      return post._embedded['wp:featuredmedia'][0].source_url;\n    }\n    return 'https://via.placeholder.com/300'; // Placeholder if no image is available\n  };\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  if (!author) {\n    return <p>No author found.</p>;\n  }\n\n  return (\n    <div className=\"author-detail\">\n      <h2>{author.name}</h2>\n      <img src={getAuthorImage()} alt={author.name} className=\"single-author-image img-fluid\" />\n      <div dangerouslySetInnerHTML={{ __html: author.description || 'No description available.' }}></div>\n      \n      <h3>Posts by {author.name}:</h3>\n      {Array.isArray(posts) && posts.length > 0 ? (  // Check if posts is an array\n        <div className=\"row\">\n          {posts.map((post) => (\n            <div className=\"col-md-4\" key={post.id}>\n              <img \n                src={getPostImage(post)} \n                alt={post.title.rendered} \n                className=\"post-image img-fluid mb-2\" \n              />\n              <a href={`/post/${post.slug}`}><h5>{post.title.rendered}</h5></a>\n              <p>{getPostCategories(post)}</p>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <p>No posts found by {author.name}.</p>\n      )}\n    </div>\n  );\n};\n\nexport default AuthorDetail;\n","import React from 'react';\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom'; // Use HashRouter\nimport './App.css';\nimport Header from './components/Header';\nimport Posts from './components/Posts';\nimport PostDetail from './components/PostDetail';\nimport CategoryDetail from './components/CategoryDetail';\nimport SearchResults from './components/SearchResults';\nimport Footer from './components/Footer';\nimport AuthorDetail from './components/AuthorDetail';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<Posts />} />\n            <Route path=\"/category/:slug\" element={<CategoryDetail />} />\n            <Route path=\"/post/:slug\" element={<PostDetail />} />\n            <Route path=\"/search\" element={<SearchResults />} />\n            <Route path=\"/author/:slug\" element={<AuthorDetail />} />\n            {/* Fallback Route */}\n            <Route path=\"*\" element={<div>404 Not Found</div>} /> {/* This can help with debugging */}\n          </Routes>\n        </div>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}